{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome","text":"<p>Here is the API v1 documentation for automated use of 001k.world services</p>"},{"location":"#general-information","title":"General Information","text":"<p>Communication is performed via the HTTP protocol.  Transport layer security uses TLS 1.3.</p> <p>All methods should use the base url</p> <pre><code>https://api.001k.world\n</code></pre> <p>The API contains both public methods, which do not require authentication, and private ones, for which it is necessary to correctly construct the request bindings. Authentication.</p>"},{"location":"address_validators/","title":"Address Validators","text":"<p>The validators for address and tag are described here. </p>"},{"location":"address_validators/#bitcoinvalidator","title":"BitcoinValidator","text":"<p>Checks all bitcoin address formats.</p>"},{"location":"address_validators/#ethereumvalidator","title":"EthereumValidator","text":"<p>Checks only addresses in hex format with checksum. Used for all Ethereum-based networks.</p>"},{"location":"address_validators/#tronvalidator","title":"TronValidator","text":"<p>Only checks base58 addresses with a checksum that start with a <code>T</code> character.</p>"},{"location":"address_validators/#monerovalidator","title":"MoneroValidator","text":"<p>Checks Monero main network addresses. Normal addresses with or without a tag are suitable. As well as integrated addresses, but a separate tag attribute is not allowed in this case. </p>"},{"location":"address_validators/#ripplevalidator","title":"RippleValidator","text":"<p>Ripple network addresses will also be searched for Destination Tag if specified. If the Tag is not specified, then its check will be skipped.</p>"},{"location":"authentication/","title":"Authentication","text":"<p>Authentication for all private methods is done through request headers.</p> <p>There are three mandatory headers for authentication</p> <ul> <li><code>X-Access-Key</code> - API key identifier</li> <li><code>X-Timestamp</code> - UNIX Timestamp in milliseconds</li> <li><code>X-Signature</code> - cryptographic signature, HMAC SHA256 </li> </ul>"},{"location":"authentication/#api-key","title":"API Key","text":"<p>In order to get the access key and the secret you need to contact the administrator. Soon this will be an automated process.</p>"},{"location":"authentication/#timestamp","title":"Timestamp","text":"<p>This parameter is needed to protect against repeated requests with the same signature and not to execute an \"outdated\" request if the inter-service communication takes time. We check that the time on the client and on the server does not diverge too much. A difference of [-5, +5] seconds is allowed</p>"},{"location":"authentication/#signature","title":"Signature","text":"<p>To properly sign the request, you need to correctly prepare the request data. Let us have:</p> <pre><code>access_key=\"&lt;string&gt;\"\nrequest_path=\"/api/v1/super_method\"\ntimestamp=1673255381423\ndata=\"&lt;string&gt;\" # - UTF-8 string with the body of the request. \n# If you do not put anything in the body of the request,\n# then the empty string.\n</code></pre> <p>To complete the signature, you need to combine the request data into one string as follows:</p> <pre><code>payload=f\"{access_key}{request_path}{timestap}{data}\"\n</code></pre> <p>Next, through HMAC and with your secret key, sign with the SHA256 hash algorithm, take the result in a hex-string in lower case. The received string must be set to the header <code>X-Signature</code></p> <p>On the server, we will calculate the signature in the same order. And if it does not match, the request will not be processed.</p> <p>Signature and request implementation examples:</p> example.pyexample.js <pre><code># Python 3 Example\nimport hashlib\nimport hmac\nimport json\nimport time\nimport requests\n# API domain and https schema \nBASE_URL = 'https://api.001k.world'\n# Your credentials\naccess_key = \"&lt;&gt;\"\nsecret_key = \"&lt;&gt;\"\nrequest_path = \"/api/v1/super_method\"\n# request data\nrequest_data = {\n\"currency\": \"BTC\",\n\"amount\": \"17.3233\",\n}\n# convert object into string\n# use this string in request later \ndata = json.dumps(request_data)\n# current timestamp in milliseconds\ntimestamp = int(time.time() * 1000)\n# prepare message for signing\nmessage = f\"{access_key}{request_path}{timestamp}{data}\"\n# calculate signature\nsignature = hmac.new(secret_key.encode('utf-8'), message.encode('utf-8'), hashlib.sha256).hexdigest()\n# create url from base and path\nurl = f'{BASE_URL}{request_path}'\nheaders = {\n'Content-type': 'application/json',\n'X-Access-Key': access_key,\n'X-Timestamp': str(timestap),\n'X-Signature': signature,\n}\n# make request\nresponse = requests.post(url=url, headers=headers, data=data)\n# check the result\nprint(response.status_code)\nprint(response.content)\n</code></pre> <pre><code>// JavaScript, NodeJS example  \nconst axios = require('axios');\nconst crypto = require('crypto');\n// API domain and https schema\nconst BASE_URL = 'https://api.001k.world';\n// Your credentials\nconst access_key = '&lt;&gt;';\nconst secret_key = '&lt;&gt;';\nconst request_path = '/api/v1/super_method';\n// request data\nconst request_data = {\ncurrency: 'BTC',\namount: '17.3233',\n};\n// convert object into string\n// use this string in request later\nconst data = JSON.stringify(request_data);\n// current timestamp in milliseconds\nconst timestamp = Date.now();\n// prepare message for signing\nconst message = `${access_key}${request_path}${timestamp}${data}`;\n// calculate signature\nconst signature = crypto\n.createHmac('sha256', secret_key)\n.update(message)\n.digest('hex');\n// create url from base and path\nconst url = `${BASE_URL}${request_path}`;\nconst headers = {\n'Content-type': 'application/json',\n'X-Access-Key': access_key,\n'X-Timestamp': `${timestamp}`,\n'X-Signature': signature,\n};\n// make request\naxios\n.post(url, data, { headers })\n.then(response =&gt; {\nconsole.log(response);\n})\n.catch(err =&gt; {\nconsole.log(err?.response?.data || err);\n});        </code></pre>"},{"location":"authentication/#errors","title":"Errors","text":"<p>Errors that may occur during authentication. </p> Code Description <code>access_key.missed</code> Header <code>X-Access-Key</code> missed <code>access_key.invalid</code> Access key has an invalid format or not found in the database <code>access_key.inactive</code> Access key set inactive <code>access_key.ip_whitelist</code> Client IP address check failed <code>user.inactive</code> User is deactivated or blocked <code>timestamp.missed</code> Header <code>X-Timestamp</code> missed <code>timestamp.invalid</code> Header <code>X-Timestamp</code> has invalid format or out of bounds [-5, +5] seconds <code>signature.missed</code> Header <code>X-Signature</code> missed <code>signature.invalid</code> Signature mismatch <p>These errors can occur in any method that requires authentication.</p>"},{"location":"balances/","title":"Balance","text":"<p>Information about available balances on the account</p>"},{"location":"balances/#get-balance","title":"Get Balance","text":"<p>Returns a list of objects and a balance for each currency.</p> <pre><code>GET /api/v1/balance\n</code></pre> <p>Authentication: Required</p> <p>Permissions: AllowBalances</p> <p>Parameters: None</p> <p>Response: array of objects</p> Parameter Type Description <code>currency</code> string currency code <code>available</code> decimal free balance available for spending at the moment <code>frozen</code> decimal frozen part of the balance <code>updated_at</code> datetime recent balance changes <p>Errors:</p> <ul> <li>all common errors</li> <li>type: <code>permission_denied</code>, code <code>allow_balances</code></li> </ul>"},{"location":"callbacks/","title":"Callbacks","text":"<p>We execute callbacks to the specified urls. This is currently supported for deposits that are made to addresses generated through this API as well as withdrawals.</p> <p>There are mandatory requirements for the URL:</p> <ul> <li>Maximum length 512 characters</li> <li>Only for domains, urls with IP addresses are not accepted</li> <li>Only URL with https scheme</li> </ul> <p>All callbacks come via POST requests with a body that includes all the details of the resource that was updated</p> <p>We will send a callback after each resource change. We expect to receive a status 200 in response. If not received, then we will continue to send retries with some delay. If the resource is updated again, then we will start sending callbacks again.</p>"},{"location":"callbacks/#replays","title":"Replays","text":"<p>If we did not receive status 200 in the response, we will repeat according to the following algorithm:</p> <ul> <li>second attempt 5 seconds after the first</li> <li>attempts from the third to the fifth with a delay of 1 minute</li> <li>after the fifth attempt, the delay will be one hour and so on until we reach the 24th attempt</li> <li>after that we will stop trying</li> </ul> <p>Warning</p> <p>The data in the requests is not signed in any way. Therefore, you should make an API request to get the details and make a decision based on this information.</p>"},{"location":"data_types/","title":"Data Types","text":"<p>Here are the data types that are used in the documentation. All communication takes place in JSON format. In addition, there are several conditional data types, they are presented below.</p>"},{"location":"data_types/#bool","title":"bool","text":"<p>Logical. <code>true</code> \u0438\u043b\u0438 <code>false</code></p>"},{"location":"data_types/#integer","title":"integer","text":"<p>Standard integer in JSON</p>"},{"location":"data_types/#string","title":"string","text":"<p>String compatible with UTF-8 encoding</p>"},{"location":"data_types/#decimal","title":"decimal","text":"<p>In almost all places where you need to specify or get a number with absolute precision, it will be represented by a decimal a string separated by a <code>.</code> dot.</p> <p>Currently, it is permissible to specify a number with a maximum precision of up to 8 decimal places. For individual currencies there are additional restrictions. See currencies.</p> <p>Warning</p> <p>The system allows the transfer of numbers given in floating point format, but does not guarantee accurate parsing.</p>"},{"location":"data_types/#datetime","title":"datetime","text":"<p>Representation of given and time. An ISO 8601 string, always with empty time zone component.</p> <p>Example: <pre><code>2022-05-09T20:34:01.009210Z\n</code></pre></p>"},{"location":"data_types/#timestamp","title":"timestamp","text":"<p>A number representing the number of milliseconds since the start of the Unix epoch.</p>"},{"location":"deposits/","title":"Deposits","text":"<p>Here you can get the details for refilling the cryptocurrency wallet, as well as the history of deposits.</p>"},{"location":"deposits/#generate-deposit-address","title":"Generate Deposit Address","text":"<p>Returns a new deposit address for a cryptocurrency according to the given parameters.</p> <pre><code>POST /api/v1/deposit/generate_address\n</code></pre> <p>Authentication: Required</p> <p>Permissions: AllowDeposits</p> <p>Parameters: request body</p> Parameter Type Rest. Mandatory Description <code>currency</code> string max len 10 yes currency code <code>method</code> string max len 20 no method code, make a clarification if the currency is accepted by more than one method.if not specified, the first method in the list will be selected <code>custom_id</code> string max len 20 no user-specified unique id. unique. <code>callback_url</code> string max len 512 no URL for notification of updates <p>Response:</p> Parameter Type Description <code>currency</code> string specified currency code <code>method</code> string code of the specified or automatically selected method <code>custom_id</code> string user-specified unique id <code>callback_url</code> string if specified by the user, then the URL where updates on all deposits for this address will be sent <code>address</code> string deposit address in the selected network. determined by the method <code>tag</code> string can be empty if the selected method does not require an additional attribute <p>Errors:</p> <ul> <li>all common errors</li> <li>type: <code>permission_denied</code>, code <code>allow_deposits</code></li> <li>validation error for each request parameter</li> <li>address generation is temporarily unavailable for the selected method</li> </ul>"},{"location":"deposits/#get-deposit-list","title":"Get Deposit List","text":"<p>Returns a list of deposits</p> <p>By default, it uses backward ordering.</p> <pre><code>GET /api/v1/deposit\n</code></pre> <p>Authentication: Required</p> <p>Permissions: AllowDeposits</p> <p>Parameters: query string</p> Parameter Type Rest. Mandatory Description <code>currency</code> string max len 10 no currency code <code>method</code> string max len 20 no method code, make a clarification if the currency is accepted by more than one method.if not specified, the first method in the list will be selected <code>custom_id</code> string max len 20 no customer id for new address <code>limit</code> integer max 200 no limit on the number of records returned <code>offset</code> integer - no how many records to shift the selection <p>Response: array of objects</p> Parameter Type Description <code>code</code> string unique identifier of the deposit <code>created_at</code> datetime deposit creation time <code>updated_at</code> datetime last modified time <code>closed_at</code> datetime time of obtaining the final status. empty if not closed <code>amount</code> decimal the amount credited to the balance <code>fee_amount</code> decimal the amount of commissions withheld from the deposit. reference <code>currency</code> string deposit currency <code>method</code> string deposit method <code>network</code> string network where the deposit is accepted <code>contract</code> string contract data object if it is a token <code>required_confirmations</code> integer the number of confirmations in the blockchain required for a successful deposit <code>actual_confirmations</code> integer current number of confirmations <code>status</code> string current status of the deposit. all statuses: <code>pending</code>, <code>success</code>, <code>failed</code> <code>reason_code</code> string deposit rejection reason program code <code>reason_message</code> string detailed description of the reason for the rejection of the deposit <code>txid</code> string blockchain transaction ID <code>attributes</code> object attributes where the deposit received, if it is a cryptocurrency <code>attributes.custom_id</code> string user-specified identifier <code>attributes.address</code> string wallet address <code>attributes.tag</code> string additional tag if needed <p>Note</p> <p>The same format of deposit details will be for callbacks</p>"},{"location":"errors/","title":"Errors","text":"<p>We follow the standard HTTP REST API convention for returning error information.</p> <p>Therefore, if an error (exception) occurs while processing the request, the status of the HTTP response will be greater than or equals 400 At the same time, it should be understood that statuses from 400 to 499 are associated with the entered information or the state of the user's account. Statuses greater than 500 can be obtained either from the internal state of the server, unexpected errors or communication between services anywhere.</p>"},{"location":"errors/#common-format","title":"Common Format","text":"<p>To recognize the error in more detail, you need to look at the body of the response. We form it as a JSON object.</p> <p>Example:</p> <pre><code>{\n  \"type\": \"client_error\",\n  \"errors\": [\n    {\n      \"code\": \"not_found\",\n      \"detail\": \"Not Found\"\n    }\n  ]\n}\n</code></pre> <p>Here <code>type</code> will display the error class:</p> <p>Error classes:</p> Type Description <code>auth_error</code> Authentication error. There will be only one element in <code>errors</code>. <code>client_error</code> Error in request data or account status. There will be only one element in <code>errors</code>. <code>permision_error</code> An error occurred while accessing the resource. There will be only one element in <code>errors</code>. <code>validation_error</code> Error in the data specified in the request. There can be more than one element in <code>errors</code>. <code>server_error</code> Error on the service side. It comes with statuses 500+. There will be only one element in <code>errors</code>. <p>The <code>errors</code> field will contain one or more elements describing a specific error, or several in case of validation. Each element will have the following fields:</p> Parameter Description <code>code</code> Programming error code. Always present and not empty. It is not described in detail for each operation or in a general list. <code>detail</code> A detailed description of the error if possible. May be empty. <code>attr</code> Wrong attribute in case of validation. If not a valid nested element, then the path to the element will be specified. <code>data</code> Data for the error. Not always present in the answer. For example, for <code>out_of_balance</code> it indicates which currency and how much is not enough to complete the operation. <p>Note</p> <p>In some situations, for example, when an error occurs outside the application and with statuses 500+, the response will not contain the above format. In such cases, you should act like a typical <code>internal</code> error. </p>"},{"location":"errors/#not-found-error","title":"Not Found Error","text":"<p>Not Found Error occurs if the method path or parameter in this path is not correctly specified, that is, there is no such resource.   </p>"},{"location":"errors/#internal-error","title":"Internal Error","text":"<p>In case of an internal error on the server, this error code is returned. The success of the request is not guaranteed. In the case of read requests, simply repeat it with a slight delay. For requests to change data, either check that the changes have been made or use guaranteed methods.</p> <p>Status: 500</p> <p>Response:</p> <pre><code>{\n  \"type\": \"server_error\",\n  \"errors\": [\n    {\n      \"code\": \"internal\",\n      \"detail\": \"Internal Error\"\n    }\n  ]\n}\n</code></pre>"},{"location":"public/","title":"Public Methods","text":""},{"location":"public/#status","title":"Status","text":"<p>Returns service status</p> <pre><code>GET /api/v1/status\n</code></pre> <p>Authentication: None</p> <p>Permissions: None</p> <p>Parameters: None</p> <p>Response</p> Parameter Type Notes Description <code>timestamp</code> timestamp not null Current timestamp in milliseconds <p>Example:</p> <pre><code>{\n  \"timestamp\": 1673255027414\n}\n</code></pre> <p>Errors: None</p>"},{"location":"public/#currencies","title":"Currencies","text":"<p>Returns all supported currencies with full information</p> <pre><code>GET /api/v1/currency\n</code></pre> <p>Authentication: None</p> <p>Permissions: None</p> <p>Parameters: None</p> <p>Response list of objects</p> Parameter Type Description <code>code</code> string unique currency code <code>name</code> string readable currency name <code>precision</code> integer max number of digits after comma for this currency <code>is_fiat</code> bool flag for fiat currencies. <code>false</code> for crypto <code>updated_at</code> datetime when last updated <code>deposit</code> array array of objects with deposit methods <code>deposit.code</code> string unique code of method <code>deposit.network</code> string network or blockchain <code>deposit.contract</code> object if not null describe contract protocol and address in network <code>deposit.is_active</code> bool current state <code>deposit.min_amount</code> decimal minimum amount for success deposit. if system detect amount less then deposit will be failed <code>deposit.max_amount</code> decimal maximum amount for success deposit. higher values will should be moderated manually <code>deposit.fee_percent</code> decimal commission percentage that is taken from the deposit amount <code>deposit.fee_percent_min</code> decimal minimum commission value from percentage <code>deposit.fee_percent_max</code> decimal maximum commission value from percentage <code>deposit.fee_absolute</code> decimal the absolute value of the commission that is charged from the deposit amount <code>deposit.updated_at</code> datetime when changes are made to this method <code>withdraw</code> array array of objects with withdraw methods <code>withdraw.code</code> string unique code of method <code>withdraw.network</code> string network or blockchain <code>withdraw.contract</code> object if not null describe contract protocol and address in network <code>withdraw.is_active</code> bool current state <code>withdraw.min_amount</code> decimal minimum amount for withdraw request <code>withdraw.max_amount</code> decimal maximum amount for withdraw request <code>withdraw.fee_percent</code> decimal commission percentage that is taken from the withdrawal amount <code>withdraw.fee_percent_min</code> decimal minimum commission value from percentage <code>withdraw.fee_percent_max</code> decimal maximum commission value from percentage <code>withdraw.fee_absolute</code> decimal the absolute value of the commission that is charged from the withdrawal amount <code>withdraw.address_validator</code> string address and tag validator. see validators. <code>withdraw.is_beneficiary_required</code> bool whether it is required to indicate the beneficiary's data for the withdrawal of funds using this method <code>withdraw.updated_at</code> datetime when changes are made to this method <p>Notes:</p> <ul> <li>Some currencies represented in few blockchains, so it need different options for deposit wor withdraw. it can be address type or contract address.</li> <li>Different methods has own costs, so note the fees: sometimes it can be non-zero</li> </ul> <p>Errors: None</p>"},{"location":"withdraws/","title":"Withdraws","text":"<p>Here are methods for working with withdrawals to external wallets. </p>"},{"location":"withdraws/#create-withdraw-request","title":"Create Withdraw Request","text":"<p>Create a withdrawal request.</p> <pre><code>POST /api/v1/withdraw\n</code></pre> <p>Authentication: Required</p> <p>Permissions: AllowWithdraws</p> <p>Parameters: request body</p> Parameter Type Rest. Mandatory Description <code>currency</code> string max len 10 yes currency code <code>method</code> string max len 20 no method code, make a clarification if the currency is accepted by more than one method.if not specified, the first method in the list will be selected <code>amount</code> decimal see method yes withdrawal amount <code>receive_mode</code> bool no default <code>false</code>. if true, then the <code>amount</code> parameter will indicate the amount that will be credited to <code>address</code> considering the commissions. <code>address</code> string see method yes Recipient address. There may also be a card or account number, depending on the chosen method. <code>tag</code> string see method cond Additional attribute for currencies where there is a tag or memo. <code>custom_id</code> string max len 20 no user-specified unique id. unique. <code>callback_url</code> string max len 512 no URL for notification of updates <code>beneficiary</code> object cond Usually for fiat currencies. An object with information about the recipient of the withdrawal. <p>Response:</p> Parameter Type Description <code>code</code> string Unique identifier of the withdrawal request <code>created_at</code> datetime Withdrawal creation time <code>updated_at</code> datetime Last modified time <code>closed_at</code> datetime Time of obtaining the final status. empty if not closed <code>amount</code> decimal Requested amount. to be deducted from account balance <code>fee_amount</code> decimal Amount of fees calculated form requested amount <code>paid_amount</code> decimal Amount actually deducted from the balance. Can be less than than requested amount in case of partial payment. Only for fiat currencies <code>paid_fee_amount</code> decimal Amount actually deducted from the balance as commissions <code>currency</code> string Withdrawal currency <code>method</code> string Withdrawal method <code>network</code> string Network where the withdrawal is created <code>contract</code> string Contract data object if it is a token <code>status</code> string Current status of the withdrawal request. all statuses: <code>pending</code>, <code>success</code>, <code>failed</code> <code>reason_code</code> string Withdrawal rejection reason program code <code>reason_message</code> string Detailed description of the reason for the rejection of the withdrawal request <code>txid</code> string Blockchain transaction ID <code>custom_id</code> string User-specified identifier <code>address</code> string Destination wallet address on account number <code>tag</code> string Additional tag if needed <p>Errors:</p> <ul> <li>all common errors</li> <li>validation errors</li> <li><code>out_of_balance</code> with details</li> </ul>"},{"location":"withdraws/#get-withdraw-list","title":"Get Withdraw List","text":"<p>Get a list of withdrawal requests.</p> <p>By default, it uses backward ordering. </p> <pre><code>GET /api/v1/withdraw\n</code></pre> <p>Authentication: Required</p> <p>Permissions: AllowWithdraws</p> <p>Parameters: query string</p> Parameter Type Rest. Mandatory Description <code>currency</code> string max len 10 no currency code <code>method</code> string max len 20 no method code <code>custom_id</code> string max len 20 no user-specified withdrawal id <code>limit</code> integer max 200 no limit on the number of records returned <code>offset</code> integer - no how many records to shift the selection <p>Response: array of objects </p> <p>Errors:</p> <ul> <li>all common errors</li> <li>validation errors</li> </ul> <p>see same format as in request response</p>"},{"location":"withdraws/#get-withdraw-details","title":"Get Withdraw Details","text":"<p>Get withdrawal request details by internal id.</p> <pre><code>GET /api/v1/withdraw/:id\n</code></pre> <p>Authentication: Required</p> <p>Permissions: AllowDeposits</p> <p>Parameters: path parameter</p> Parameter Type Rest. Mandatory Description <code>id</code> string max len 20 yes unique withdraw code <p>Response: see same format as in request response</p> <p>Errors:</p> <ul> <li>all common errors</li> <li>validation errors</li> <li>not found error</li> </ul>"}]}